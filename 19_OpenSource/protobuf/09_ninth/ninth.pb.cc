// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ninth.proto

#include "ninth.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_ninth_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CardAltergeist_ninth_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ninth_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CardGalatea_ninth_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ninth_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CardMadolche_ninth_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ninth_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CardOptions_ninth_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ninth_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CardPerformage_ninth_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ninth_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CardZoodiac_ninth_2eproto;
namespace mam {
class CardOptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CardOptions> _instance;
} _CardOptions_default_instance_;
class CardSetDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CardSet> _instance;
} _CardSet_default_instance_;
class CardMadolcheDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CardMadolche> _instance;
} _CardMadolche_default_instance_;
class CardGalateaDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CardGalatea> _instance;
} _CardGalatea_default_instance_;
class CardZoodiacDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CardZoodiac> _instance;
} _CardZoodiac_default_instance_;
class CardAltergeistDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CardAltergeist> _instance;
} _CardAltergeist_default_instance_;
class CardPerformageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CardPerformage> _instance;
} _CardPerformage_default_instance_;
}  // namespace mam
static void InitDefaultsscc_info_CardAltergeist_ninth_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mam::_CardAltergeist_default_instance_;
    new (ptr) ::mam::CardAltergeist();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mam::CardAltergeist::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CardAltergeist_ninth_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CardAltergeist_ninth_2eproto}, {}};

static void InitDefaultsscc_info_CardGalatea_ninth_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mam::_CardGalatea_default_instance_;
    new (ptr) ::mam::CardGalatea();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mam::CardGalatea::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CardGalatea_ninth_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CardGalatea_ninth_2eproto}, {}};

static void InitDefaultsscc_info_CardMadolche_ninth_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mam::_CardMadolche_default_instance_;
    new (ptr) ::mam::CardMadolche();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mam::CardMadolche::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CardMadolche_ninth_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CardMadolche_ninth_2eproto}, {}};

static void InitDefaultsscc_info_CardOptions_ninth_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mam::_CardOptions_default_instance_;
    new (ptr) ::mam::CardOptions();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mam::CardOptions::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CardOptions_ninth_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CardOptions_ninth_2eproto}, {}};

static void InitDefaultsscc_info_CardPerformage_ninth_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mam::_CardPerformage_default_instance_;
    new (ptr) ::mam::CardPerformage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mam::CardPerformage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CardPerformage_ninth_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CardPerformage_ninth_2eproto}, {}};

static void InitDefaultsscc_info_CardSet_ninth_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mam::_CardSet_default_instance_;
    new (ptr) ::mam::CardSet();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mam::CardSet::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_CardSet_ninth_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, 0, InitDefaultsscc_info_CardSet_ninth_2eproto}, {
      &scc_info_CardMadolche_ninth_2eproto.base,
      &scc_info_CardGalatea_ninth_2eproto.base,
      &scc_info_CardZoodiac_ninth_2eproto.base,
      &scc_info_CardAltergeist_ninth_2eproto.base,
      &scc_info_CardPerformage_ninth_2eproto.base,}};

static void InitDefaultsscc_info_CardZoodiac_ninth_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mam::_CardZoodiac_default_instance_;
    new (ptr) ::mam::CardZoodiac();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mam::CardZoodiac::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CardZoodiac_ninth_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CardZoodiac_ninth_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ninth_2eproto[7];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_ninth_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ninth_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ninth_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mam::CardOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mam::CardOptions, type_),
  PROTOBUF_FIELD_OFFSET(::mam::CardOptions, max_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mam::CardSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mam::CardSet, omit_),
  PROTOBUF_FIELD_OFFSET(::mam::CardSet, cm1_),
  PROTOBUF_FIELD_OFFSET(::mam::CardSet, cm2_),
  PROTOBUF_FIELD_OFFSET(::mam::CardSet, cm3_),
  PROTOBUF_FIELD_OFFSET(::mam::CardSet, cg1_),
  PROTOBUF_FIELD_OFFSET(::mam::CardSet, cg2_),
  PROTOBUF_FIELD_OFFSET(::mam::CardSet, cz1_),
  PROTOBUF_FIELD_OFFSET(::mam::CardSet, ca1_),
  PROTOBUF_FIELD_OFFSET(::mam::CardSet, cf1_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mam::CardMadolche, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mam::CardMadolche, madolche_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mam::CardGalatea, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mam::CardGalatea, galatea_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mam::CardZoodiac, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mam::CardZoodiac, zoodiac_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mam::CardAltergeist, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mam::CardAltergeist, altergeist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mam::CardPerformage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mam::CardPerformage, performage_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mam::CardOptions)},
  { 7, -1, sizeof(::mam::CardSet)},
  { 21, -1, sizeof(::mam::CardMadolche)},
  { 27, -1, sizeof(::mam::CardGalatea)},
  { 33, -1, sizeof(::mam::CardZoodiac)},
  { 39, -1, sizeof(::mam::CardAltergeist)},
  { 45, -1, sizeof(::mam::CardPerformage)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mam::_CardOptions_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mam::_CardSet_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mam::_CardMadolche_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mam::_CardGalatea_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mam::_CardZoodiac_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mam::_CardAltergeist_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mam::_CardPerformage_default_instance_),
};

const char descriptor_table_protodef_ninth_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\013ninth.proto\022\003mam\032 google/protobuf/desc"
  "riptor.proto\"(\n\013CardOptions\022\014\n\004type\030\001 \001("
  "\t\022\013\n\003max\030\002 \001(\005\"\251\003\n\007CardSet\022\014\n\004omit\030\001 \001(\t"
  "\0221\n\003cm1\030\002 \001(\0132\021.mam.CardMadolcheB\021\222M\t\n\007M"
  "onster\222M\002\020\001\022/\n\003cm2\030\003 \001(\0132\021.mam.CardMadol"
  "cheB\017\222M\007\n\005Magic\222M\002\020\003\022.\n\003cm3\030\004 \001(\0132\021.mam."
  "CardMadolcheB\016\222M\006\n\004Trap\222M\002\020\003\022.\n\003cg1\030\005 \001("
  "\0132\020.mam.CardGalateaB\017\222M\007\n\005Magic\222M\002\020\002\0220\n\003"
  "cg2\030\006 \001(\0132\020.mam.CardGalateaB\021\222M\t\n\007Monste"
  "r\222M\002\020\001\0220\n\003cz1\030\007 \001(\0132\020.mam.CardZoodiacB\021\222"
  "M\t\n\007Monster\222M\002\020\002\0223\n\003ca1\030\010 \001(\0132\023.mam.Card"
  "AltergeistB\021\222M\t\n\007Monster\222M\002\020\001\0223\n\003cf1\030\t \001"
  "(\0132\023.mam.CardPerformageB\021\222M\t\n\007Monster\222M\002"
  "\020\000\" \n\014CardMadolche\022\020\n\010madolche\030\001 \001(\t\"\036\n\013"
  "CardGalatea\022\017\n\007galatea\030\001 \001(\t\"\036\n\013CardZood"
  "iac\022\017\n\007zoodiac\030\001 \001(\t\"$\n\016CardAltergeist\022\022"
  "\n\naltergeist\030\001 \001(\t\"$\n\016CardPerformage\022\022\n\n"
  "performage\030\001 \001(\t:=\n\003opt\022\035.google.protobu"
  "f.FieldOptions\030\322\t \001(\0132\020.mam.CardOptionsb"
  "\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ninth_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ninth_2eproto_sccs[7] = {
  &scc_info_CardAltergeist_ninth_2eproto.base,
  &scc_info_CardGalatea_ninth_2eproto.base,
  &scc_info_CardMadolche_ninth_2eproto.base,
  &scc_info_CardOptions_ninth_2eproto.base,
  &scc_info_CardPerformage_ninth_2eproto.base,
  &scc_info_CardSet_ninth_2eproto.base,
  &scc_info_CardZoodiac_ninth_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ninth_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ninth_2eproto = {
  false, false, descriptor_table_protodef_ninth_2eproto, "ninth.proto", 767,
  &descriptor_table_ninth_2eproto_once, descriptor_table_ninth_2eproto_sccs, descriptor_table_ninth_2eproto_deps, 7, 1,
  schemas, file_default_instances, TableStruct_ninth_2eproto::offsets,
  file_level_metadata_ninth_2eproto, 7, file_level_enum_descriptors_ninth_2eproto, file_level_service_descriptors_ninth_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ninth_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ninth_2eproto)), true);
namespace mam {

// ===================================================================

void CardOptions::InitAsDefaultInstance() {
}
class CardOptions::_Internal {
 public:
};

CardOptions::CardOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mam.CardOptions)
}
CardOptions::CardOptions(const CardOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_type().empty()) {
    type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_type(),
      GetArena());
  }
  max_ = from.max_;
  // @@protoc_insertion_point(copy_constructor:mam.CardOptions)
}

void CardOptions::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CardOptions_ninth_2eproto.base);
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  max_ = 0;
}

CardOptions::~CardOptions() {
  // @@protoc_insertion_point(destructor:mam.CardOptions)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CardOptions::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CardOptions::ArenaDtor(void* object) {
  CardOptions* _this = reinterpret_cast< CardOptions* >(object);
  (void)_this;
}
void CardOptions::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CardOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CardOptions& CardOptions::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CardOptions_ninth_2eproto.base);
  return *internal_default_instance();
}


void CardOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:mam.CardOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  max_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CardOptions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mam.CardOptions.type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 max = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          max_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CardOptions::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mam.CardOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mam.CardOptions.type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_type(), target);
  }

  // int32 max = 2;
  if (this->max() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_max(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mam.CardOptions)
  return target;
}

size_t CardOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mam.CardOptions)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // int32 max = 2;
  if (this->max() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_max());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CardOptions::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mam.CardOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const CardOptions* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CardOptions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mam.CardOptions)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mam.CardOptions)
    MergeFrom(*source);
  }
}

void CardOptions::MergeFrom(const CardOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mam.CardOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type().size() > 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.max() != 0) {
    _internal_set_max(from._internal_max());
  }
}

void CardOptions::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mam.CardOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardOptions::CopyFrom(const CardOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mam.CardOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardOptions::IsInitialized() const {
  return true;
}

void CardOptions::InternalSwap(CardOptions* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(max_, other->max_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CardOptions::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CardSet::InitAsDefaultInstance() {
  ::mam::_CardSet_default_instance_._instance.get_mutable()->cm1_ = const_cast< ::mam::CardMadolche*>(
      ::mam::CardMadolche::internal_default_instance());
  ::mam::_CardSet_default_instance_._instance.get_mutable()->cm2_ = const_cast< ::mam::CardMadolche*>(
      ::mam::CardMadolche::internal_default_instance());
  ::mam::_CardSet_default_instance_._instance.get_mutable()->cm3_ = const_cast< ::mam::CardMadolche*>(
      ::mam::CardMadolche::internal_default_instance());
  ::mam::_CardSet_default_instance_._instance.get_mutable()->cg1_ = const_cast< ::mam::CardGalatea*>(
      ::mam::CardGalatea::internal_default_instance());
  ::mam::_CardSet_default_instance_._instance.get_mutable()->cg2_ = const_cast< ::mam::CardGalatea*>(
      ::mam::CardGalatea::internal_default_instance());
  ::mam::_CardSet_default_instance_._instance.get_mutable()->cz1_ = const_cast< ::mam::CardZoodiac*>(
      ::mam::CardZoodiac::internal_default_instance());
  ::mam::_CardSet_default_instance_._instance.get_mutable()->ca1_ = const_cast< ::mam::CardAltergeist*>(
      ::mam::CardAltergeist::internal_default_instance());
  ::mam::_CardSet_default_instance_._instance.get_mutable()->cf1_ = const_cast< ::mam::CardPerformage*>(
      ::mam::CardPerformage::internal_default_instance());
}
class CardSet::_Internal {
 public:
  static const ::mam::CardMadolche& cm1(const CardSet* msg);
  static const ::mam::CardMadolche& cm2(const CardSet* msg);
  static const ::mam::CardMadolche& cm3(const CardSet* msg);
  static const ::mam::CardGalatea& cg1(const CardSet* msg);
  static const ::mam::CardGalatea& cg2(const CardSet* msg);
  static const ::mam::CardZoodiac& cz1(const CardSet* msg);
  static const ::mam::CardAltergeist& ca1(const CardSet* msg);
  static const ::mam::CardPerformage& cf1(const CardSet* msg);
};

const ::mam::CardMadolche&
CardSet::_Internal::cm1(const CardSet* msg) {
  return *msg->cm1_;
}
const ::mam::CardMadolche&
CardSet::_Internal::cm2(const CardSet* msg) {
  return *msg->cm2_;
}
const ::mam::CardMadolche&
CardSet::_Internal::cm3(const CardSet* msg) {
  return *msg->cm3_;
}
const ::mam::CardGalatea&
CardSet::_Internal::cg1(const CardSet* msg) {
  return *msg->cg1_;
}
const ::mam::CardGalatea&
CardSet::_Internal::cg2(const CardSet* msg) {
  return *msg->cg2_;
}
const ::mam::CardZoodiac&
CardSet::_Internal::cz1(const CardSet* msg) {
  return *msg->cz1_;
}
const ::mam::CardAltergeist&
CardSet::_Internal::ca1(const CardSet* msg) {
  return *msg->ca1_;
}
const ::mam::CardPerformage&
CardSet::_Internal::cf1(const CardSet* msg) {
  return *msg->cf1_;
}
CardSet::CardSet(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mam.CardSet)
}
CardSet::CardSet(const CardSet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  omit_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_omit().empty()) {
    omit_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_omit(),
      GetArena());
  }
  if (from._internal_has_cm1()) {
    cm1_ = new ::mam::CardMadolche(*from.cm1_);
  } else {
    cm1_ = nullptr;
  }
  if (from._internal_has_cm2()) {
    cm2_ = new ::mam::CardMadolche(*from.cm2_);
  } else {
    cm2_ = nullptr;
  }
  if (from._internal_has_cm3()) {
    cm3_ = new ::mam::CardMadolche(*from.cm3_);
  } else {
    cm3_ = nullptr;
  }
  if (from._internal_has_cg1()) {
    cg1_ = new ::mam::CardGalatea(*from.cg1_);
  } else {
    cg1_ = nullptr;
  }
  if (from._internal_has_cg2()) {
    cg2_ = new ::mam::CardGalatea(*from.cg2_);
  } else {
    cg2_ = nullptr;
  }
  if (from._internal_has_cz1()) {
    cz1_ = new ::mam::CardZoodiac(*from.cz1_);
  } else {
    cz1_ = nullptr;
  }
  if (from._internal_has_ca1()) {
    ca1_ = new ::mam::CardAltergeist(*from.ca1_);
  } else {
    ca1_ = nullptr;
  }
  if (from._internal_has_cf1()) {
    cf1_ = new ::mam::CardPerformage(*from.cf1_);
  } else {
    cf1_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mam.CardSet)
}

void CardSet::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CardSet_ninth_2eproto.base);
  omit_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&cm1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cf1_) -
      reinterpret_cast<char*>(&cm1_)) + sizeof(cf1_));
}

CardSet::~CardSet() {
  // @@protoc_insertion_point(destructor:mam.CardSet)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CardSet::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  omit_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete cm1_;
  if (this != internal_default_instance()) delete cm2_;
  if (this != internal_default_instance()) delete cm3_;
  if (this != internal_default_instance()) delete cg1_;
  if (this != internal_default_instance()) delete cg2_;
  if (this != internal_default_instance()) delete cz1_;
  if (this != internal_default_instance()) delete ca1_;
  if (this != internal_default_instance()) delete cf1_;
}

void CardSet::ArenaDtor(void* object) {
  CardSet* _this = reinterpret_cast< CardSet* >(object);
  (void)_this;
}
void CardSet::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CardSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CardSet& CardSet::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CardSet_ninth_2eproto.base);
  return *internal_default_instance();
}


void CardSet::Clear() {
// @@protoc_insertion_point(message_clear_start:mam.CardSet)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  omit_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && cm1_ != nullptr) {
    delete cm1_;
  }
  cm1_ = nullptr;
  if (GetArena() == nullptr && cm2_ != nullptr) {
    delete cm2_;
  }
  cm2_ = nullptr;
  if (GetArena() == nullptr && cm3_ != nullptr) {
    delete cm3_;
  }
  cm3_ = nullptr;
  if (GetArena() == nullptr && cg1_ != nullptr) {
    delete cg1_;
  }
  cg1_ = nullptr;
  if (GetArena() == nullptr && cg2_ != nullptr) {
    delete cg2_;
  }
  cg2_ = nullptr;
  if (GetArena() == nullptr && cz1_ != nullptr) {
    delete cz1_;
  }
  cz1_ = nullptr;
  if (GetArena() == nullptr && ca1_ != nullptr) {
    delete ca1_;
  }
  ca1_ = nullptr;
  if (GetArena() == nullptr && cf1_ != nullptr) {
    delete cf1_;
  }
  cf1_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CardSet::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string omit = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_omit();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mam.CardSet.omit"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .mam.CardMadolche cm1 = 2 [(.mam.opt) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_cm1(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .mam.CardMadolche cm2 = 3 [(.mam.opt) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_cm2(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .mam.CardMadolche cm3 = 4 [(.mam.opt) = {
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_cm3(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .mam.CardGalatea cg1 = 5 [(.mam.opt) = {
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_cg1(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .mam.CardGalatea cg2 = 6 [(.mam.opt) = {
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_cg2(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .mam.CardZoodiac cz1 = 7 [(.mam.opt) = {
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_cz1(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .mam.CardAltergeist ca1 = 8 [(.mam.opt) = {
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_ca1(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .mam.CardPerformage cf1 = 9 [(.mam.opt) = {
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_cf1(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CardSet::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mam.CardSet)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string omit = 1;
  if (this->omit().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_omit().data(), static_cast<int>(this->_internal_omit().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mam.CardSet.omit");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_omit(), target);
  }

  // .mam.CardMadolche cm1 = 2 [(.mam.opt) = {
  if (this->has_cm1()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::cm1(this), target, stream);
  }

  // .mam.CardMadolche cm2 = 3 [(.mam.opt) = {
  if (this->has_cm2()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::cm2(this), target, stream);
  }

  // .mam.CardMadolche cm3 = 4 [(.mam.opt) = {
  if (this->has_cm3()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::cm3(this), target, stream);
  }

  // .mam.CardGalatea cg1 = 5 [(.mam.opt) = {
  if (this->has_cg1()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::cg1(this), target, stream);
  }

  // .mam.CardGalatea cg2 = 6 [(.mam.opt) = {
  if (this->has_cg2()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::cg2(this), target, stream);
  }

  // .mam.CardZoodiac cz1 = 7 [(.mam.opt) = {
  if (this->has_cz1()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::cz1(this), target, stream);
  }

  // .mam.CardAltergeist ca1 = 8 [(.mam.opt) = {
  if (this->has_ca1()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::ca1(this), target, stream);
  }

  // .mam.CardPerformage cf1 = 9 [(.mam.opt) = {
  if (this->has_cf1()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::cf1(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mam.CardSet)
  return target;
}

size_t CardSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mam.CardSet)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string omit = 1;
  if (this->omit().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_omit());
  }

  // .mam.CardMadolche cm1 = 2 [(.mam.opt) = {
  if (this->has_cm1()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *cm1_);
  }

  // .mam.CardMadolche cm2 = 3 [(.mam.opt) = {
  if (this->has_cm2()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *cm2_);
  }

  // .mam.CardMadolche cm3 = 4 [(.mam.opt) = {
  if (this->has_cm3()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *cm3_);
  }

  // .mam.CardGalatea cg1 = 5 [(.mam.opt) = {
  if (this->has_cg1()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *cg1_);
  }

  // .mam.CardGalatea cg2 = 6 [(.mam.opt) = {
  if (this->has_cg2()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *cg2_);
  }

  // .mam.CardZoodiac cz1 = 7 [(.mam.opt) = {
  if (this->has_cz1()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *cz1_);
  }

  // .mam.CardAltergeist ca1 = 8 [(.mam.opt) = {
  if (this->has_ca1()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ca1_);
  }

  // .mam.CardPerformage cf1 = 9 [(.mam.opt) = {
  if (this->has_cf1()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *cf1_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CardSet::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mam.CardSet)
  GOOGLE_DCHECK_NE(&from, this);
  const CardSet* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CardSet>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mam.CardSet)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mam.CardSet)
    MergeFrom(*source);
  }
}

void CardSet::MergeFrom(const CardSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mam.CardSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.omit().size() > 0) {
    _internal_set_omit(from._internal_omit());
  }
  if (from.has_cm1()) {
    _internal_mutable_cm1()->::mam::CardMadolche::MergeFrom(from._internal_cm1());
  }
  if (from.has_cm2()) {
    _internal_mutable_cm2()->::mam::CardMadolche::MergeFrom(from._internal_cm2());
  }
  if (from.has_cm3()) {
    _internal_mutable_cm3()->::mam::CardMadolche::MergeFrom(from._internal_cm3());
  }
  if (from.has_cg1()) {
    _internal_mutable_cg1()->::mam::CardGalatea::MergeFrom(from._internal_cg1());
  }
  if (from.has_cg2()) {
    _internal_mutable_cg2()->::mam::CardGalatea::MergeFrom(from._internal_cg2());
  }
  if (from.has_cz1()) {
    _internal_mutable_cz1()->::mam::CardZoodiac::MergeFrom(from._internal_cz1());
  }
  if (from.has_ca1()) {
    _internal_mutable_ca1()->::mam::CardAltergeist::MergeFrom(from._internal_ca1());
  }
  if (from.has_cf1()) {
    _internal_mutable_cf1()->::mam::CardPerformage::MergeFrom(from._internal_cf1());
  }
}

void CardSet::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mam.CardSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardSet::CopyFrom(const CardSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mam.CardSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardSet::IsInitialized() const {
  return true;
}

void CardSet::InternalSwap(CardSet* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  omit_.Swap(&other->omit_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CardSet, cf1_)
      + sizeof(CardSet::cf1_)
      - PROTOBUF_FIELD_OFFSET(CardSet, cm1_)>(
          reinterpret_cast<char*>(&cm1_),
          reinterpret_cast<char*>(&other->cm1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CardSet::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CardMadolche::InitAsDefaultInstance() {
}
class CardMadolche::_Internal {
 public:
};

CardMadolche::CardMadolche(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mam.CardMadolche)
}
CardMadolche::CardMadolche(const CardMadolche& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  madolche_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_madolche().empty()) {
    madolche_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_madolche(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:mam.CardMadolche)
}

void CardMadolche::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CardMadolche_ninth_2eproto.base);
  madolche_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CardMadolche::~CardMadolche() {
  // @@protoc_insertion_point(destructor:mam.CardMadolche)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CardMadolche::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  madolche_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CardMadolche::ArenaDtor(void* object) {
  CardMadolche* _this = reinterpret_cast< CardMadolche* >(object);
  (void)_this;
}
void CardMadolche::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CardMadolche::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CardMadolche& CardMadolche::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CardMadolche_ninth_2eproto.base);
  return *internal_default_instance();
}


void CardMadolche::Clear() {
// @@protoc_insertion_point(message_clear_start:mam.CardMadolche)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  madolche_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CardMadolche::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string madolche = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_madolche();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mam.CardMadolche.madolche"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CardMadolche::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mam.CardMadolche)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string madolche = 1;
  if (this->madolche().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_madolche().data(), static_cast<int>(this->_internal_madolche().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mam.CardMadolche.madolche");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_madolche(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mam.CardMadolche)
  return target;
}

size_t CardMadolche::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mam.CardMadolche)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string madolche = 1;
  if (this->madolche().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_madolche());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CardMadolche::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mam.CardMadolche)
  GOOGLE_DCHECK_NE(&from, this);
  const CardMadolche* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CardMadolche>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mam.CardMadolche)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mam.CardMadolche)
    MergeFrom(*source);
  }
}

void CardMadolche::MergeFrom(const CardMadolche& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mam.CardMadolche)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.madolche().size() > 0) {
    _internal_set_madolche(from._internal_madolche());
  }
}

void CardMadolche::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mam.CardMadolche)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardMadolche::CopyFrom(const CardMadolche& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mam.CardMadolche)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardMadolche::IsInitialized() const {
  return true;
}

void CardMadolche::InternalSwap(CardMadolche* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  madolche_.Swap(&other->madolche_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CardMadolche::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CardGalatea::InitAsDefaultInstance() {
}
class CardGalatea::_Internal {
 public:
};

CardGalatea::CardGalatea(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mam.CardGalatea)
}
CardGalatea::CardGalatea(const CardGalatea& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  galatea_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_galatea().empty()) {
    galatea_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_galatea(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:mam.CardGalatea)
}

void CardGalatea::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CardGalatea_ninth_2eproto.base);
  galatea_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CardGalatea::~CardGalatea() {
  // @@protoc_insertion_point(destructor:mam.CardGalatea)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CardGalatea::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  galatea_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CardGalatea::ArenaDtor(void* object) {
  CardGalatea* _this = reinterpret_cast< CardGalatea* >(object);
  (void)_this;
}
void CardGalatea::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CardGalatea::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CardGalatea& CardGalatea::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CardGalatea_ninth_2eproto.base);
  return *internal_default_instance();
}


void CardGalatea::Clear() {
// @@protoc_insertion_point(message_clear_start:mam.CardGalatea)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  galatea_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CardGalatea::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string galatea = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_galatea();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mam.CardGalatea.galatea"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CardGalatea::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mam.CardGalatea)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string galatea = 1;
  if (this->galatea().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_galatea().data(), static_cast<int>(this->_internal_galatea().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mam.CardGalatea.galatea");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_galatea(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mam.CardGalatea)
  return target;
}

size_t CardGalatea::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mam.CardGalatea)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string galatea = 1;
  if (this->galatea().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_galatea());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CardGalatea::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mam.CardGalatea)
  GOOGLE_DCHECK_NE(&from, this);
  const CardGalatea* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CardGalatea>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mam.CardGalatea)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mam.CardGalatea)
    MergeFrom(*source);
  }
}

void CardGalatea::MergeFrom(const CardGalatea& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mam.CardGalatea)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.galatea().size() > 0) {
    _internal_set_galatea(from._internal_galatea());
  }
}

void CardGalatea::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mam.CardGalatea)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardGalatea::CopyFrom(const CardGalatea& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mam.CardGalatea)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardGalatea::IsInitialized() const {
  return true;
}

void CardGalatea::InternalSwap(CardGalatea* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  galatea_.Swap(&other->galatea_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CardGalatea::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CardZoodiac::InitAsDefaultInstance() {
}
class CardZoodiac::_Internal {
 public:
};

CardZoodiac::CardZoodiac(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mam.CardZoodiac)
}
CardZoodiac::CardZoodiac(const CardZoodiac& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  zoodiac_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_zoodiac().empty()) {
    zoodiac_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_zoodiac(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:mam.CardZoodiac)
}

void CardZoodiac::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CardZoodiac_ninth_2eproto.base);
  zoodiac_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CardZoodiac::~CardZoodiac() {
  // @@protoc_insertion_point(destructor:mam.CardZoodiac)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CardZoodiac::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  zoodiac_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CardZoodiac::ArenaDtor(void* object) {
  CardZoodiac* _this = reinterpret_cast< CardZoodiac* >(object);
  (void)_this;
}
void CardZoodiac::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CardZoodiac::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CardZoodiac& CardZoodiac::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CardZoodiac_ninth_2eproto.base);
  return *internal_default_instance();
}


void CardZoodiac::Clear() {
// @@protoc_insertion_point(message_clear_start:mam.CardZoodiac)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  zoodiac_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CardZoodiac::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string zoodiac = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_zoodiac();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mam.CardZoodiac.zoodiac"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CardZoodiac::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mam.CardZoodiac)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string zoodiac = 1;
  if (this->zoodiac().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_zoodiac().data(), static_cast<int>(this->_internal_zoodiac().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mam.CardZoodiac.zoodiac");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_zoodiac(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mam.CardZoodiac)
  return target;
}

size_t CardZoodiac::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mam.CardZoodiac)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string zoodiac = 1;
  if (this->zoodiac().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_zoodiac());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CardZoodiac::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mam.CardZoodiac)
  GOOGLE_DCHECK_NE(&from, this);
  const CardZoodiac* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CardZoodiac>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mam.CardZoodiac)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mam.CardZoodiac)
    MergeFrom(*source);
  }
}

void CardZoodiac::MergeFrom(const CardZoodiac& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mam.CardZoodiac)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.zoodiac().size() > 0) {
    _internal_set_zoodiac(from._internal_zoodiac());
  }
}

void CardZoodiac::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mam.CardZoodiac)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardZoodiac::CopyFrom(const CardZoodiac& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mam.CardZoodiac)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardZoodiac::IsInitialized() const {
  return true;
}

void CardZoodiac::InternalSwap(CardZoodiac* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  zoodiac_.Swap(&other->zoodiac_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CardZoodiac::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CardAltergeist::InitAsDefaultInstance() {
}
class CardAltergeist::_Internal {
 public:
};

CardAltergeist::CardAltergeist(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mam.CardAltergeist)
}
CardAltergeist::CardAltergeist(const CardAltergeist& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  altergeist_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_altergeist().empty()) {
    altergeist_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_altergeist(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:mam.CardAltergeist)
}

void CardAltergeist::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CardAltergeist_ninth_2eproto.base);
  altergeist_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CardAltergeist::~CardAltergeist() {
  // @@protoc_insertion_point(destructor:mam.CardAltergeist)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CardAltergeist::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  altergeist_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CardAltergeist::ArenaDtor(void* object) {
  CardAltergeist* _this = reinterpret_cast< CardAltergeist* >(object);
  (void)_this;
}
void CardAltergeist::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CardAltergeist::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CardAltergeist& CardAltergeist::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CardAltergeist_ninth_2eproto.base);
  return *internal_default_instance();
}


void CardAltergeist::Clear() {
// @@protoc_insertion_point(message_clear_start:mam.CardAltergeist)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  altergeist_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CardAltergeist::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string altergeist = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_altergeist();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mam.CardAltergeist.altergeist"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CardAltergeist::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mam.CardAltergeist)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string altergeist = 1;
  if (this->altergeist().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_altergeist().data(), static_cast<int>(this->_internal_altergeist().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mam.CardAltergeist.altergeist");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_altergeist(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mam.CardAltergeist)
  return target;
}

size_t CardAltergeist::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mam.CardAltergeist)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string altergeist = 1;
  if (this->altergeist().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_altergeist());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CardAltergeist::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mam.CardAltergeist)
  GOOGLE_DCHECK_NE(&from, this);
  const CardAltergeist* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CardAltergeist>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mam.CardAltergeist)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mam.CardAltergeist)
    MergeFrom(*source);
  }
}

void CardAltergeist::MergeFrom(const CardAltergeist& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mam.CardAltergeist)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.altergeist().size() > 0) {
    _internal_set_altergeist(from._internal_altergeist());
  }
}

void CardAltergeist::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mam.CardAltergeist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardAltergeist::CopyFrom(const CardAltergeist& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mam.CardAltergeist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardAltergeist::IsInitialized() const {
  return true;
}

void CardAltergeist::InternalSwap(CardAltergeist* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  altergeist_.Swap(&other->altergeist_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CardAltergeist::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CardPerformage::InitAsDefaultInstance() {
}
class CardPerformage::_Internal {
 public:
};

CardPerformage::CardPerformage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mam.CardPerformage)
}
CardPerformage::CardPerformage(const CardPerformage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  performage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_performage().empty()) {
    performage_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_performage(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:mam.CardPerformage)
}

void CardPerformage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CardPerformage_ninth_2eproto.base);
  performage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CardPerformage::~CardPerformage() {
  // @@protoc_insertion_point(destructor:mam.CardPerformage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CardPerformage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  performage_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CardPerformage::ArenaDtor(void* object) {
  CardPerformage* _this = reinterpret_cast< CardPerformage* >(object);
  (void)_this;
}
void CardPerformage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CardPerformage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CardPerformage& CardPerformage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CardPerformage_ninth_2eproto.base);
  return *internal_default_instance();
}


void CardPerformage::Clear() {
// @@protoc_insertion_point(message_clear_start:mam.CardPerformage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  performage_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CardPerformage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string performage = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_performage();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mam.CardPerformage.performage"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CardPerformage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mam.CardPerformage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string performage = 1;
  if (this->performage().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_performage().data(), static_cast<int>(this->_internal_performage().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mam.CardPerformage.performage");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_performage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mam.CardPerformage)
  return target;
}

size_t CardPerformage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mam.CardPerformage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string performage = 1;
  if (this->performage().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_performage());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CardPerformage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mam.CardPerformage)
  GOOGLE_DCHECK_NE(&from, this);
  const CardPerformage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CardPerformage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mam.CardPerformage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mam.CardPerformage)
    MergeFrom(*source);
  }
}

void CardPerformage::MergeFrom(const CardPerformage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mam.CardPerformage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.performage().size() > 0) {
    _internal_set_performage(from._internal_performage());
  }
}

void CardPerformage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mam.CardPerformage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardPerformage::CopyFrom(const CardPerformage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mam.CardPerformage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardPerformage::IsInitialized() const {
  return true;
}

void CardPerformage::InternalSwap(CardPerformage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  performage_.Swap(&other->performage_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CardPerformage::GetMetadata() const {
  return GetMetadataStatic();
}

::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::mam::CardOptions >, 11, false >
  opt(kOptFieldNumber, ::mam::CardOptions::default_instance());

// @@protoc_insertion_point(namespace_scope)
}  // namespace mam
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mam::CardOptions* Arena::CreateMaybeMessage< ::mam::CardOptions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mam::CardOptions >(arena);
}
template<> PROTOBUF_NOINLINE ::mam::CardSet* Arena::CreateMaybeMessage< ::mam::CardSet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mam::CardSet >(arena);
}
template<> PROTOBUF_NOINLINE ::mam::CardMadolche* Arena::CreateMaybeMessage< ::mam::CardMadolche >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mam::CardMadolche >(arena);
}
template<> PROTOBUF_NOINLINE ::mam::CardGalatea* Arena::CreateMaybeMessage< ::mam::CardGalatea >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mam::CardGalatea >(arena);
}
template<> PROTOBUF_NOINLINE ::mam::CardZoodiac* Arena::CreateMaybeMessage< ::mam::CardZoodiac >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mam::CardZoodiac >(arena);
}
template<> PROTOBUF_NOINLINE ::mam::CardAltergeist* Arena::CreateMaybeMessage< ::mam::CardAltergeist >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mam::CardAltergeist >(arena);
}
template<> PROTOBUF_NOINLINE ::mam::CardPerformage* Arena::CreateMaybeMessage< ::mam::CardPerformage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mam::CardPerformage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
