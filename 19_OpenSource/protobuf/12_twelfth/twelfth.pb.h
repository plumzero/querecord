// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: twelfth.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_twelfth_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_twelfth_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3013000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3013000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_twelfth_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_twelfth_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[9]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_twelfth_2eproto;
namespace mam {
class AccountOverview;
class AccountOverviewDefaultTypeInternal;
extern AccountOverviewDefaultTypeInternal _AccountOverview_default_instance_;
class AccountOverviews;
class AccountOverviewsDefaultTypeInternal;
extern AccountOverviewsDefaultTypeInternal _AccountOverviews_default_instance_;
class DataIndexList;
class DataIndexListDefaultTypeInternal;
extern DataIndexListDefaultTypeInternal _DataIndexList_default_instance_;
class DataIndexList_DicEntry_DoNotUse;
class DataIndexList_DicEntry_DoNotUseDefaultTypeInternal;
extern DataIndexList_DicEntry_DoNotUseDefaultTypeInternal _DataIndexList_DicEntry_DoNotUse_default_instance_;
class IndexList;
class IndexListDefaultTypeInternal;
extern IndexListDefaultTypeInternal _IndexList_default_instance_;
class LoadResult;
class LoadResultDefaultTypeInternal;
extern LoadResultDefaultTypeInternal _LoadResult_default_instance_;
class LoadResult_MapAccountOverviewEntry_DoNotUse;
class LoadResult_MapAccountOverviewEntry_DoNotUseDefaultTypeInternal;
extern LoadResult_MapAccountOverviewEntry_DoNotUseDefaultTypeInternal _LoadResult_MapAccountOverviewEntry_DoNotUse_default_instance_;
class LoadResult_MapDataIndexListEntry_DoNotUse;
class LoadResult_MapDataIndexListEntry_DoNotUseDefaultTypeInternal;
extern LoadResult_MapDataIndexListEntry_DoNotUseDefaultTypeInternal _LoadResult_MapDataIndexListEntry_DoNotUse_default_instance_;
class SysInfo;
class SysInfoDefaultTypeInternal;
extern SysInfoDefaultTypeInternal _SysInfo_default_instance_;
}  // namespace mam
PROTOBUF_NAMESPACE_OPEN
template<> ::mam::AccountOverview* Arena::CreateMaybeMessage<::mam::AccountOverview>(Arena*);
template<> ::mam::AccountOverviews* Arena::CreateMaybeMessage<::mam::AccountOverviews>(Arena*);
template<> ::mam::DataIndexList* Arena::CreateMaybeMessage<::mam::DataIndexList>(Arena*);
template<> ::mam::DataIndexList_DicEntry_DoNotUse* Arena::CreateMaybeMessage<::mam::DataIndexList_DicEntry_DoNotUse>(Arena*);
template<> ::mam::IndexList* Arena::CreateMaybeMessage<::mam::IndexList>(Arena*);
template<> ::mam::LoadResult* Arena::CreateMaybeMessage<::mam::LoadResult>(Arena*);
template<> ::mam::LoadResult_MapAccountOverviewEntry_DoNotUse* Arena::CreateMaybeMessage<::mam::LoadResult_MapAccountOverviewEntry_DoNotUse>(Arena*);
template<> ::mam::LoadResult_MapDataIndexListEntry_DoNotUse* Arena::CreateMaybeMessage<::mam::LoadResult_MapDataIndexListEntry_DoNotUse>(Arena*);
template<> ::mam::SysInfo* Arena::CreateMaybeMessage<::mam::SysInfo>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace mam {

// ===================================================================

class LoadResult_MapAccountOverviewEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<LoadResult_MapAccountOverviewEntry_DoNotUse, 
    std::string, ::mam::AccountOverviews,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<LoadResult_MapAccountOverviewEntry_DoNotUse, 
    std::string, ::mam::AccountOverviews,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  LoadResult_MapAccountOverviewEntry_DoNotUse();
  explicit LoadResult_MapAccountOverviewEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const LoadResult_MapAccountOverviewEntry_DoNotUse& other);
  static const LoadResult_MapAccountOverviewEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const LoadResult_MapAccountOverviewEntry_DoNotUse*>(&_LoadResult_MapAccountOverviewEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "mam.LoadResult.MapAccountOverviewEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_twelfth_2eproto);
    return ::descriptor_table_twelfth_2eproto.file_level_metadata[0];
  }

  public:
};

// -------------------------------------------------------------------

class LoadResult_MapDataIndexListEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<LoadResult_MapDataIndexListEntry_DoNotUse, 
    std::string, ::mam::DataIndexList,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<LoadResult_MapDataIndexListEntry_DoNotUse, 
    std::string, ::mam::DataIndexList,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  LoadResult_MapDataIndexListEntry_DoNotUse();
  explicit LoadResult_MapDataIndexListEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const LoadResult_MapDataIndexListEntry_DoNotUse& other);
  static const LoadResult_MapDataIndexListEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const LoadResult_MapDataIndexListEntry_DoNotUse*>(&_LoadResult_MapDataIndexListEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "mam.LoadResult.MapDataIndexListEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_twelfth_2eproto);
    return ::descriptor_table_twelfth_2eproto.file_level_metadata[1];
  }

  public:
};

// -------------------------------------------------------------------

class LoadResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mam.LoadResult) */ {
 public:
  inline LoadResult() : LoadResult(nullptr) {}
  virtual ~LoadResult();

  LoadResult(const LoadResult& from);
  LoadResult(LoadResult&& from) noexcept
    : LoadResult() {
    *this = ::std::move(from);
  }

  inline LoadResult& operator=(const LoadResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoadResult& operator=(LoadResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LoadResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoadResult* internal_default_instance() {
    return reinterpret_cast<const LoadResult*>(
               &_LoadResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(LoadResult& a, LoadResult& b) {
    a.Swap(&b);
  }
  inline void Swap(LoadResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoadResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LoadResult* New() const final {
    return CreateMaybeMessage<LoadResult>(nullptr);
  }

  LoadResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LoadResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LoadResult& from);
  void MergeFrom(const LoadResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoadResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mam.LoadResult";
  }
  protected:
  explicit LoadResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_twelfth_2eproto);
    return ::descriptor_table_twelfth_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kMapAccountOverviewFieldNumber = 1,
    kMapDataIndexListFieldNumber = 2,
  };
  // map<string, .mam.AccountOverviews> map_account_overview = 1;
  int map_account_overview_size() const;
  private:
  int _internal_map_account_overview_size() const;
  public:
  void clear_map_account_overview();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::mam::AccountOverviews >&
      _internal_map_account_overview() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::mam::AccountOverviews >*
      _internal_mutable_map_account_overview();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::mam::AccountOverviews >&
      map_account_overview() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::mam::AccountOverviews >*
      mutable_map_account_overview();

  // map<string, .mam.DataIndexList> map_data_index_list = 2;
  int map_data_index_list_size() const;
  private:
  int _internal_map_data_index_list_size() const;
  public:
  void clear_map_data_index_list();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::mam::DataIndexList >&
      _internal_map_data_index_list() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::mam::DataIndexList >*
      _internal_mutable_map_data_index_list();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::mam::DataIndexList >&
      map_data_index_list() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::mam::DataIndexList >*
      mutable_map_data_index_list();

  // @@protoc_insertion_point(class_scope:mam.LoadResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      LoadResult_MapAccountOverviewEntry_DoNotUse,
      std::string, ::mam::AccountOverviews,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > map_account_overview_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      LoadResult_MapDataIndexListEntry_DoNotUse,
      std::string, ::mam::DataIndexList,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > map_data_index_list_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_twelfth_2eproto;
};
// -------------------------------------------------------------------

class AccountOverviews PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mam.AccountOverviews) */ {
 public:
  inline AccountOverviews() : AccountOverviews(nullptr) {}
  virtual ~AccountOverviews();

  AccountOverviews(const AccountOverviews& from);
  AccountOverviews(AccountOverviews&& from) noexcept
    : AccountOverviews() {
    *this = ::std::move(from);
  }

  inline AccountOverviews& operator=(const AccountOverviews& from) {
    CopyFrom(from);
    return *this;
  }
  inline AccountOverviews& operator=(AccountOverviews&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AccountOverviews& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccountOverviews* internal_default_instance() {
    return reinterpret_cast<const AccountOverviews*>(
               &_AccountOverviews_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(AccountOverviews& a, AccountOverviews& b) {
    a.Swap(&b);
  }
  inline void Swap(AccountOverviews* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AccountOverviews* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AccountOverviews* New() const final {
    return CreateMaybeMessage<AccountOverviews>(nullptr);
  }

  AccountOverviews* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AccountOverviews>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AccountOverviews& from);
  void MergeFrom(const AccountOverviews& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AccountOverviews* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mam.AccountOverviews";
  }
  protected:
  explicit AccountOverviews(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_twelfth_2eproto);
    return ::descriptor_table_twelfth_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContentFieldNumber = 1,
  };
  // repeated .mam.AccountOverview content = 1;
  int content_size() const;
  private:
  int _internal_content_size() const;
  public:
  void clear_content();
  ::mam::AccountOverview* mutable_content(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mam::AccountOverview >*
      mutable_content();
  private:
  const ::mam::AccountOverview& _internal_content(int index) const;
  ::mam::AccountOverview* _internal_add_content();
  public:
  const ::mam::AccountOverview& content(int index) const;
  ::mam::AccountOverview* add_content();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mam::AccountOverview >&
      content() const;

  // @@protoc_insertion_point(class_scope:mam.AccountOverviews)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mam::AccountOverview > content_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_twelfth_2eproto;
};
// -------------------------------------------------------------------

class AccountOverview PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mam.AccountOverview) */ {
 public:
  inline AccountOverview() : AccountOverview(nullptr) {}
  virtual ~AccountOverview();

  AccountOverview(const AccountOverview& from);
  AccountOverview(AccountOverview&& from) noexcept
    : AccountOverview() {
    *this = ::std::move(from);
  }

  inline AccountOverview& operator=(const AccountOverview& from) {
    CopyFrom(from);
    return *this;
  }
  inline AccountOverview& operator=(AccountOverview&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AccountOverview& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccountOverview* internal_default_instance() {
    return reinterpret_cast<const AccountOverview*>(
               &_AccountOverview_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(AccountOverview& a, AccountOverview& b) {
    a.Swap(&b);
  }
  inline void Swap(AccountOverview* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AccountOverview* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AccountOverview* New() const final {
    return CreateMaybeMessage<AccountOverview>(nullptr);
  }

  AccountOverview* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AccountOverview>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AccountOverview& from);
  void MergeFrom(const AccountOverview& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AccountOverview* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mam.AccountOverview";
  }
  protected:
  explicit AccountOverview(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_twelfth_2eproto);
    return ::descriptor_table_twelfth_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTurnoverFieldNumber = 2,
    kRateFieldNumber = 3,
    kFeeFieldNumber = 4,
    kProfitFieldNumber = 5,
    kAccountidFieldNumber = 1,
  };
  // double turnover = 2;
  void clear_turnover();
  double turnover() const;
  void set_turnover(double value);
  private:
  double _internal_turnover() const;
  void _internal_set_turnover(double value);
  public:

  // double rate = 3;
  void clear_rate();
  double rate() const;
  void set_rate(double value);
  private:
  double _internal_rate() const;
  void _internal_set_rate(double value);
  public:

  // double fee = 4;
  void clear_fee();
  double fee() const;
  void set_fee(double value);
  private:
  double _internal_fee() const;
  void _internal_set_fee(double value);
  public:

  // double profit = 5;
  void clear_profit();
  double profit() const;
  void set_profit(double value);
  private:
  double _internal_profit() const;
  void _internal_set_profit(double value);
  public:

  // int32 accountid = 1;
  void clear_accountid();
  ::PROTOBUF_NAMESPACE_ID::int32 accountid() const;
  void set_accountid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_accountid() const;
  void _internal_set_accountid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:mam.AccountOverview)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  double turnover_;
  double rate_;
  double fee_;
  double profit_;
  ::PROTOBUF_NAMESPACE_ID::int32 accountid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_twelfth_2eproto;
};
// -------------------------------------------------------------------

class DataIndexList_DicEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<DataIndexList_DicEntry_DoNotUse, 
    std::string, ::mam::IndexList,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<DataIndexList_DicEntry_DoNotUse, 
    std::string, ::mam::IndexList,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  DataIndexList_DicEntry_DoNotUse();
  explicit DataIndexList_DicEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const DataIndexList_DicEntry_DoNotUse& other);
  static const DataIndexList_DicEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const DataIndexList_DicEntry_DoNotUse*>(&_DataIndexList_DicEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "mam.DataIndexList.DicEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_twelfth_2eproto);
    return ::descriptor_table_twelfth_2eproto.file_level_metadata[5];
  }

  public:
};

// -------------------------------------------------------------------

class DataIndexList PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mam.DataIndexList) */ {
 public:
  inline DataIndexList() : DataIndexList(nullptr) {}
  virtual ~DataIndexList();

  DataIndexList(const DataIndexList& from);
  DataIndexList(DataIndexList&& from) noexcept
    : DataIndexList() {
    *this = ::std::move(from);
  }

  inline DataIndexList& operator=(const DataIndexList& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataIndexList& operator=(DataIndexList&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DataIndexList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataIndexList* internal_default_instance() {
    return reinterpret_cast<const DataIndexList*>(
               &_DataIndexList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(DataIndexList& a, DataIndexList& b) {
    a.Swap(&b);
  }
  inline void Swap(DataIndexList* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataIndexList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DataIndexList* New() const final {
    return CreateMaybeMessage<DataIndexList>(nullptr);
  }

  DataIndexList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DataIndexList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DataIndexList& from);
  void MergeFrom(const DataIndexList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataIndexList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mam.DataIndexList";
  }
  protected:
  explicit DataIndexList(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_twelfth_2eproto);
    return ::descriptor_table_twelfth_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kDicFieldNumber = 1,
  };
  // map<string, .mam.IndexList> dic = 1;
  int dic_size() const;
  private:
  int _internal_dic_size() const;
  public:
  void clear_dic();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::mam::IndexList >&
      _internal_dic() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::mam::IndexList >*
      _internal_mutable_dic();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::mam::IndexList >&
      dic() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::mam::IndexList >*
      mutable_dic();

  // @@protoc_insertion_point(class_scope:mam.DataIndexList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      DataIndexList_DicEntry_DoNotUse,
      std::string, ::mam::IndexList,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > dic_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_twelfth_2eproto;
};
// -------------------------------------------------------------------

class IndexList PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mam.IndexList) */ {
 public:
  inline IndexList() : IndexList(nullptr) {}
  virtual ~IndexList();

  IndexList(const IndexList& from);
  IndexList(IndexList&& from) noexcept
    : IndexList() {
    *this = ::std::move(from);
  }

  inline IndexList& operator=(const IndexList& from) {
    CopyFrom(from);
    return *this;
  }
  inline IndexList& operator=(IndexList&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IndexList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IndexList* internal_default_instance() {
    return reinterpret_cast<const IndexList*>(
               &_IndexList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(IndexList& a, IndexList& b) {
    a.Swap(&b);
  }
  inline void Swap(IndexList* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IndexList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IndexList* New() const final {
    return CreateMaybeMessage<IndexList>(nullptr);
  }

  IndexList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IndexList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IndexList& from);
  void MergeFrom(const IndexList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IndexList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mam.IndexList";
  }
  protected:
  explicit IndexList(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_twelfth_2eproto);
    return ::descriptor_table_twelfth_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSnapshotsFieldNumber = 1,
  };
  // repeated .mam.SysInfo snapshots = 1;
  int snapshots_size() const;
  private:
  int _internal_snapshots_size() const;
  public:
  void clear_snapshots();
  ::mam::SysInfo* mutable_snapshots(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mam::SysInfo >*
      mutable_snapshots();
  private:
  const ::mam::SysInfo& _internal_snapshots(int index) const;
  ::mam::SysInfo* _internal_add_snapshots();
  public:
  const ::mam::SysInfo& snapshots(int index) const;
  ::mam::SysInfo* add_snapshots();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mam::SysInfo >&
      snapshots() const;

  // @@protoc_insertion_point(class_scope:mam.IndexList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mam::SysInfo > snapshots_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_twelfth_2eproto;
};
// -------------------------------------------------------------------

class SysInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mam.SysInfo) */ {
 public:
  inline SysInfo() : SysInfo(nullptr) {}
  virtual ~SysInfo();

  SysInfo(const SysInfo& from);
  SysInfo(SysInfo&& from) noexcept
    : SysInfo() {
    *this = ::std::move(from);
  }

  inline SysInfo& operator=(const SysInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline SysInfo& operator=(SysInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SysInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SysInfo* internal_default_instance() {
    return reinterpret_cast<const SysInfo*>(
               &_SysInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(SysInfo& a, SysInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(SysInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SysInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SysInfo* New() const final {
    return CreateMaybeMessage<SysInfo>(nullptr);
  }

  SysInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SysInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SysInfo& from);
  void MergeFrom(const SysInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SysInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mam.SysInfo";
  }
  protected:
  explicit SysInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_twelfth_2eproto);
    return ::descriptor_table_twelfth_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCountSZFieldNumber = 1,
    kCountSHFieldNumber = 2,
    kCountCFFieldNumber = 3,
    kCountSZReverseFieldNumber = 4,
    kSumSZDelayFieldNumber = 6,
    kSumSHDelayFieldNumber = 7,
    kCountSHReverseFieldNumber = 5,
    kCountSZDelayFieldNumber = 9,
    kSumCFDelayFieldNumber = 8,
    kCountSHDelayFieldNumber = 10,
    kCountPdtPosFieldNumber = 11,
    kCountPdtNegFieldNumber = 12,
    kCountPdtInvalidFieldNumber = 13,
    kConsumeCalFeatFieldNumber = 14,
    kConsumeCalPdtFieldNumber = 15,
    kMaxConsumeCalFeatFieldNumber = 16,
    kMaxConsumeCalPdtFieldNumber = 17,
    kCountCalFeatFieldNumber = 18,
    kCountCalPdtFieldNumber = 19,
    kNtimeFieldNumber = 20,
  };
  // int32 countSZ = 1;
  void clear_countsz();
  ::PROTOBUF_NAMESPACE_ID::int32 countsz() const;
  void set_countsz(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_countsz() const;
  void _internal_set_countsz(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 countSH = 2;
  void clear_countsh();
  ::PROTOBUF_NAMESPACE_ID::int32 countsh() const;
  void set_countsh(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_countsh() const;
  void _internal_set_countsh(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 countCF = 3;
  void clear_countcf();
  ::PROTOBUF_NAMESPACE_ID::int32 countcf() const;
  void set_countcf(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_countcf() const;
  void _internal_set_countcf(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 countSZ_reverse = 4;
  void clear_countsz_reverse();
  ::PROTOBUF_NAMESPACE_ID::int32 countsz_reverse() const;
  void set_countsz_reverse(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_countsz_reverse() const;
  void _internal_set_countsz_reverse(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // double sumSZ_delay = 6;
  void clear_sumsz_delay();
  double sumsz_delay() const;
  void set_sumsz_delay(double value);
  private:
  double _internal_sumsz_delay() const;
  void _internal_set_sumsz_delay(double value);
  public:

  // double sumSH_delay = 7;
  void clear_sumsh_delay();
  double sumsh_delay() const;
  void set_sumsh_delay(double value);
  private:
  double _internal_sumsh_delay() const;
  void _internal_set_sumsh_delay(double value);
  public:

  // int32 countSH_reverse = 5;
  void clear_countsh_reverse();
  ::PROTOBUF_NAMESPACE_ID::int32 countsh_reverse() const;
  void set_countsh_reverse(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_countsh_reverse() const;
  void _internal_set_countsh_reverse(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 countSZ_delay = 9;
  void clear_countsz_delay();
  ::PROTOBUF_NAMESPACE_ID::int32 countsz_delay() const;
  void set_countsz_delay(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_countsz_delay() const;
  void _internal_set_countsz_delay(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // double sumCF_delay = 8;
  void clear_sumcf_delay();
  double sumcf_delay() const;
  void set_sumcf_delay(double value);
  private:
  double _internal_sumcf_delay() const;
  void _internal_set_sumcf_delay(double value);
  public:

  // int32 countSH_delay = 10;
  void clear_countsh_delay();
  ::PROTOBUF_NAMESPACE_ID::int32 countsh_delay() const;
  void set_countsh_delay(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_countsh_delay() const;
  void _internal_set_countsh_delay(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 countPdt_pos = 11;
  void clear_countpdt_pos();
  ::PROTOBUF_NAMESPACE_ID::int32 countpdt_pos() const;
  void set_countpdt_pos(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_countpdt_pos() const;
  void _internal_set_countpdt_pos(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 countPdt_neg = 12;
  void clear_countpdt_neg();
  ::PROTOBUF_NAMESPACE_ID::int32 countpdt_neg() const;
  void set_countpdt_neg(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_countpdt_neg() const;
  void _internal_set_countpdt_neg(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 countPdt_invalid = 13;
  void clear_countpdt_invalid();
  ::PROTOBUF_NAMESPACE_ID::int32 countpdt_invalid() const;
  void set_countpdt_invalid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_countpdt_invalid() const;
  void _internal_set_countpdt_invalid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // double consume_CalFeat = 14;
  void clear_consume_calfeat();
  double consume_calfeat() const;
  void set_consume_calfeat(double value);
  private:
  double _internal_consume_calfeat() const;
  void _internal_set_consume_calfeat(double value);
  public:

  // double consume_CalPdt = 15;
  void clear_consume_calpdt();
  double consume_calpdt() const;
  void set_consume_calpdt(double value);
  private:
  double _internal_consume_calpdt() const;
  void _internal_set_consume_calpdt(double value);
  public:

  // double maxConsume_CalFeat = 16;
  void clear_maxconsume_calfeat();
  double maxconsume_calfeat() const;
  void set_maxconsume_calfeat(double value);
  private:
  double _internal_maxconsume_calfeat() const;
  void _internal_set_maxconsume_calfeat(double value);
  public:

  // double maxConsume_CalPdt = 17;
  void clear_maxconsume_calpdt();
  double maxconsume_calpdt() const;
  void set_maxconsume_calpdt(double value);
  private:
  double _internal_maxconsume_calpdt() const;
  void _internal_set_maxconsume_calpdt(double value);
  public:

  // int32 count_CalFeat = 18;
  void clear_count_calfeat();
  ::PROTOBUF_NAMESPACE_ID::int32 count_calfeat() const;
  void set_count_calfeat(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_count_calfeat() const;
  void _internal_set_count_calfeat(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 count_CalPdt = 19;
  void clear_count_calpdt();
  ::PROTOBUF_NAMESPACE_ID::int32 count_calpdt() const;
  void set_count_calpdt(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_count_calpdt() const;
  void _internal_set_count_calpdt(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 ntime = 20;
  void clear_ntime();
  ::PROTOBUF_NAMESPACE_ID::int32 ntime() const;
  void set_ntime(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ntime() const;
  void _internal_set_ntime(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:mam.SysInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 countsz_;
  ::PROTOBUF_NAMESPACE_ID::int32 countsh_;
  ::PROTOBUF_NAMESPACE_ID::int32 countcf_;
  ::PROTOBUF_NAMESPACE_ID::int32 countsz_reverse_;
  double sumsz_delay_;
  double sumsh_delay_;
  ::PROTOBUF_NAMESPACE_ID::int32 countsh_reverse_;
  ::PROTOBUF_NAMESPACE_ID::int32 countsz_delay_;
  double sumcf_delay_;
  ::PROTOBUF_NAMESPACE_ID::int32 countsh_delay_;
  ::PROTOBUF_NAMESPACE_ID::int32 countpdt_pos_;
  ::PROTOBUF_NAMESPACE_ID::int32 countpdt_neg_;
  ::PROTOBUF_NAMESPACE_ID::int32 countpdt_invalid_;
  double consume_calfeat_;
  double consume_calpdt_;
  double maxconsume_calfeat_;
  double maxconsume_calpdt_;
  ::PROTOBUF_NAMESPACE_ID::int32 count_calfeat_;
  ::PROTOBUF_NAMESPACE_ID::int32 count_calpdt_;
  ::PROTOBUF_NAMESPACE_ID::int32 ntime_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_twelfth_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// LoadResult

// map<string, .mam.AccountOverviews> map_account_overview = 1;
inline int LoadResult::_internal_map_account_overview_size() const {
  return map_account_overview_.size();
}
inline int LoadResult::map_account_overview_size() const {
  return _internal_map_account_overview_size();
}
inline void LoadResult::clear_map_account_overview() {
  map_account_overview_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::mam::AccountOverviews >&
LoadResult::_internal_map_account_overview() const {
  return map_account_overview_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::mam::AccountOverviews >&
LoadResult::map_account_overview() const {
  // @@protoc_insertion_point(field_map:mam.LoadResult.map_account_overview)
  return _internal_map_account_overview();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::mam::AccountOverviews >*
LoadResult::_internal_mutable_map_account_overview() {
  return map_account_overview_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::mam::AccountOverviews >*
LoadResult::mutable_map_account_overview() {
  // @@protoc_insertion_point(field_mutable_map:mam.LoadResult.map_account_overview)
  return _internal_mutable_map_account_overview();
}

// map<string, .mam.DataIndexList> map_data_index_list = 2;
inline int LoadResult::_internal_map_data_index_list_size() const {
  return map_data_index_list_.size();
}
inline int LoadResult::map_data_index_list_size() const {
  return _internal_map_data_index_list_size();
}
inline void LoadResult::clear_map_data_index_list() {
  map_data_index_list_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::mam::DataIndexList >&
LoadResult::_internal_map_data_index_list() const {
  return map_data_index_list_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::mam::DataIndexList >&
LoadResult::map_data_index_list() const {
  // @@protoc_insertion_point(field_map:mam.LoadResult.map_data_index_list)
  return _internal_map_data_index_list();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::mam::DataIndexList >*
LoadResult::_internal_mutable_map_data_index_list() {
  return map_data_index_list_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::mam::DataIndexList >*
LoadResult::mutable_map_data_index_list() {
  // @@protoc_insertion_point(field_mutable_map:mam.LoadResult.map_data_index_list)
  return _internal_mutable_map_data_index_list();
}

// -------------------------------------------------------------------

// AccountOverviews

// repeated .mam.AccountOverview content = 1;
inline int AccountOverviews::_internal_content_size() const {
  return content_.size();
}
inline int AccountOverviews::content_size() const {
  return _internal_content_size();
}
inline void AccountOverviews::clear_content() {
  content_.Clear();
}
inline ::mam::AccountOverview* AccountOverviews::mutable_content(int index) {
  // @@protoc_insertion_point(field_mutable:mam.AccountOverviews.content)
  return content_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mam::AccountOverview >*
AccountOverviews::mutable_content() {
  // @@protoc_insertion_point(field_mutable_list:mam.AccountOverviews.content)
  return &content_;
}
inline const ::mam::AccountOverview& AccountOverviews::_internal_content(int index) const {
  return content_.Get(index);
}
inline const ::mam::AccountOverview& AccountOverviews::content(int index) const {
  // @@protoc_insertion_point(field_get:mam.AccountOverviews.content)
  return _internal_content(index);
}
inline ::mam::AccountOverview* AccountOverviews::_internal_add_content() {
  return content_.Add();
}
inline ::mam::AccountOverview* AccountOverviews::add_content() {
  // @@protoc_insertion_point(field_add:mam.AccountOverviews.content)
  return _internal_add_content();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mam::AccountOverview >&
AccountOverviews::content() const {
  // @@protoc_insertion_point(field_list:mam.AccountOverviews.content)
  return content_;
}

// -------------------------------------------------------------------

// AccountOverview

// int32 accountid = 1;
inline void AccountOverview::clear_accountid() {
  accountid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AccountOverview::_internal_accountid() const {
  return accountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AccountOverview::accountid() const {
  // @@protoc_insertion_point(field_get:mam.AccountOverview.accountid)
  return _internal_accountid();
}
inline void AccountOverview::_internal_set_accountid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  accountid_ = value;
}
inline void AccountOverview::set_accountid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:mam.AccountOverview.accountid)
}

// double turnover = 2;
inline void AccountOverview::clear_turnover() {
  turnover_ = 0;
}
inline double AccountOverview::_internal_turnover() const {
  return turnover_;
}
inline double AccountOverview::turnover() const {
  // @@protoc_insertion_point(field_get:mam.AccountOverview.turnover)
  return _internal_turnover();
}
inline void AccountOverview::_internal_set_turnover(double value) {
  
  turnover_ = value;
}
inline void AccountOverview::set_turnover(double value) {
  _internal_set_turnover(value);
  // @@protoc_insertion_point(field_set:mam.AccountOverview.turnover)
}

// double rate = 3;
inline void AccountOverview::clear_rate() {
  rate_ = 0;
}
inline double AccountOverview::_internal_rate() const {
  return rate_;
}
inline double AccountOverview::rate() const {
  // @@protoc_insertion_point(field_get:mam.AccountOverview.rate)
  return _internal_rate();
}
inline void AccountOverview::_internal_set_rate(double value) {
  
  rate_ = value;
}
inline void AccountOverview::set_rate(double value) {
  _internal_set_rate(value);
  // @@protoc_insertion_point(field_set:mam.AccountOverview.rate)
}

// double fee = 4;
inline void AccountOverview::clear_fee() {
  fee_ = 0;
}
inline double AccountOverview::_internal_fee() const {
  return fee_;
}
inline double AccountOverview::fee() const {
  // @@protoc_insertion_point(field_get:mam.AccountOverview.fee)
  return _internal_fee();
}
inline void AccountOverview::_internal_set_fee(double value) {
  
  fee_ = value;
}
inline void AccountOverview::set_fee(double value) {
  _internal_set_fee(value);
  // @@protoc_insertion_point(field_set:mam.AccountOverview.fee)
}

// double profit = 5;
inline void AccountOverview::clear_profit() {
  profit_ = 0;
}
inline double AccountOverview::_internal_profit() const {
  return profit_;
}
inline double AccountOverview::profit() const {
  // @@protoc_insertion_point(field_get:mam.AccountOverview.profit)
  return _internal_profit();
}
inline void AccountOverview::_internal_set_profit(double value) {
  
  profit_ = value;
}
inline void AccountOverview::set_profit(double value) {
  _internal_set_profit(value);
  // @@protoc_insertion_point(field_set:mam.AccountOverview.profit)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// DataIndexList

// map<string, .mam.IndexList> dic = 1;
inline int DataIndexList::_internal_dic_size() const {
  return dic_.size();
}
inline int DataIndexList::dic_size() const {
  return _internal_dic_size();
}
inline void DataIndexList::clear_dic() {
  dic_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::mam::IndexList >&
DataIndexList::_internal_dic() const {
  return dic_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::mam::IndexList >&
DataIndexList::dic() const {
  // @@protoc_insertion_point(field_map:mam.DataIndexList.dic)
  return _internal_dic();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::mam::IndexList >*
DataIndexList::_internal_mutable_dic() {
  return dic_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::mam::IndexList >*
DataIndexList::mutable_dic() {
  // @@protoc_insertion_point(field_mutable_map:mam.DataIndexList.dic)
  return _internal_mutable_dic();
}

// -------------------------------------------------------------------

// IndexList

// repeated .mam.SysInfo snapshots = 1;
inline int IndexList::_internal_snapshots_size() const {
  return snapshots_.size();
}
inline int IndexList::snapshots_size() const {
  return _internal_snapshots_size();
}
inline void IndexList::clear_snapshots() {
  snapshots_.Clear();
}
inline ::mam::SysInfo* IndexList::mutable_snapshots(int index) {
  // @@protoc_insertion_point(field_mutable:mam.IndexList.snapshots)
  return snapshots_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mam::SysInfo >*
IndexList::mutable_snapshots() {
  // @@protoc_insertion_point(field_mutable_list:mam.IndexList.snapshots)
  return &snapshots_;
}
inline const ::mam::SysInfo& IndexList::_internal_snapshots(int index) const {
  return snapshots_.Get(index);
}
inline const ::mam::SysInfo& IndexList::snapshots(int index) const {
  // @@protoc_insertion_point(field_get:mam.IndexList.snapshots)
  return _internal_snapshots(index);
}
inline ::mam::SysInfo* IndexList::_internal_add_snapshots() {
  return snapshots_.Add();
}
inline ::mam::SysInfo* IndexList::add_snapshots() {
  // @@protoc_insertion_point(field_add:mam.IndexList.snapshots)
  return _internal_add_snapshots();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mam::SysInfo >&
IndexList::snapshots() const {
  // @@protoc_insertion_point(field_list:mam.IndexList.snapshots)
  return snapshots_;
}

// -------------------------------------------------------------------

// SysInfo

// int32 countSZ = 1;
inline void SysInfo::clear_countsz() {
  countsz_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SysInfo::_internal_countsz() const {
  return countsz_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SysInfo::countsz() const {
  // @@protoc_insertion_point(field_get:mam.SysInfo.countSZ)
  return _internal_countsz();
}
inline void SysInfo::_internal_set_countsz(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  countsz_ = value;
}
inline void SysInfo::set_countsz(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_countsz(value);
  // @@protoc_insertion_point(field_set:mam.SysInfo.countSZ)
}

// int32 countSH = 2;
inline void SysInfo::clear_countsh() {
  countsh_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SysInfo::_internal_countsh() const {
  return countsh_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SysInfo::countsh() const {
  // @@protoc_insertion_point(field_get:mam.SysInfo.countSH)
  return _internal_countsh();
}
inline void SysInfo::_internal_set_countsh(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  countsh_ = value;
}
inline void SysInfo::set_countsh(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_countsh(value);
  // @@protoc_insertion_point(field_set:mam.SysInfo.countSH)
}

// int32 countCF = 3;
inline void SysInfo::clear_countcf() {
  countcf_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SysInfo::_internal_countcf() const {
  return countcf_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SysInfo::countcf() const {
  // @@protoc_insertion_point(field_get:mam.SysInfo.countCF)
  return _internal_countcf();
}
inline void SysInfo::_internal_set_countcf(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  countcf_ = value;
}
inline void SysInfo::set_countcf(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_countcf(value);
  // @@protoc_insertion_point(field_set:mam.SysInfo.countCF)
}

// int32 countSZ_reverse = 4;
inline void SysInfo::clear_countsz_reverse() {
  countsz_reverse_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SysInfo::_internal_countsz_reverse() const {
  return countsz_reverse_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SysInfo::countsz_reverse() const {
  // @@protoc_insertion_point(field_get:mam.SysInfo.countSZ_reverse)
  return _internal_countsz_reverse();
}
inline void SysInfo::_internal_set_countsz_reverse(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  countsz_reverse_ = value;
}
inline void SysInfo::set_countsz_reverse(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_countsz_reverse(value);
  // @@protoc_insertion_point(field_set:mam.SysInfo.countSZ_reverse)
}

// int32 countSH_reverse = 5;
inline void SysInfo::clear_countsh_reverse() {
  countsh_reverse_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SysInfo::_internal_countsh_reverse() const {
  return countsh_reverse_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SysInfo::countsh_reverse() const {
  // @@protoc_insertion_point(field_get:mam.SysInfo.countSH_reverse)
  return _internal_countsh_reverse();
}
inline void SysInfo::_internal_set_countsh_reverse(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  countsh_reverse_ = value;
}
inline void SysInfo::set_countsh_reverse(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_countsh_reverse(value);
  // @@protoc_insertion_point(field_set:mam.SysInfo.countSH_reverse)
}

// double sumSZ_delay = 6;
inline void SysInfo::clear_sumsz_delay() {
  sumsz_delay_ = 0;
}
inline double SysInfo::_internal_sumsz_delay() const {
  return sumsz_delay_;
}
inline double SysInfo::sumsz_delay() const {
  // @@protoc_insertion_point(field_get:mam.SysInfo.sumSZ_delay)
  return _internal_sumsz_delay();
}
inline void SysInfo::_internal_set_sumsz_delay(double value) {
  
  sumsz_delay_ = value;
}
inline void SysInfo::set_sumsz_delay(double value) {
  _internal_set_sumsz_delay(value);
  // @@protoc_insertion_point(field_set:mam.SysInfo.sumSZ_delay)
}

// double sumSH_delay = 7;
inline void SysInfo::clear_sumsh_delay() {
  sumsh_delay_ = 0;
}
inline double SysInfo::_internal_sumsh_delay() const {
  return sumsh_delay_;
}
inline double SysInfo::sumsh_delay() const {
  // @@protoc_insertion_point(field_get:mam.SysInfo.sumSH_delay)
  return _internal_sumsh_delay();
}
inline void SysInfo::_internal_set_sumsh_delay(double value) {
  
  sumsh_delay_ = value;
}
inline void SysInfo::set_sumsh_delay(double value) {
  _internal_set_sumsh_delay(value);
  // @@protoc_insertion_point(field_set:mam.SysInfo.sumSH_delay)
}

// double sumCF_delay = 8;
inline void SysInfo::clear_sumcf_delay() {
  sumcf_delay_ = 0;
}
inline double SysInfo::_internal_sumcf_delay() const {
  return sumcf_delay_;
}
inline double SysInfo::sumcf_delay() const {
  // @@protoc_insertion_point(field_get:mam.SysInfo.sumCF_delay)
  return _internal_sumcf_delay();
}
inline void SysInfo::_internal_set_sumcf_delay(double value) {
  
  sumcf_delay_ = value;
}
inline void SysInfo::set_sumcf_delay(double value) {
  _internal_set_sumcf_delay(value);
  // @@protoc_insertion_point(field_set:mam.SysInfo.sumCF_delay)
}

// int32 countSZ_delay = 9;
inline void SysInfo::clear_countsz_delay() {
  countsz_delay_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SysInfo::_internal_countsz_delay() const {
  return countsz_delay_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SysInfo::countsz_delay() const {
  // @@protoc_insertion_point(field_get:mam.SysInfo.countSZ_delay)
  return _internal_countsz_delay();
}
inline void SysInfo::_internal_set_countsz_delay(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  countsz_delay_ = value;
}
inline void SysInfo::set_countsz_delay(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_countsz_delay(value);
  // @@protoc_insertion_point(field_set:mam.SysInfo.countSZ_delay)
}

// int32 countSH_delay = 10;
inline void SysInfo::clear_countsh_delay() {
  countsh_delay_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SysInfo::_internal_countsh_delay() const {
  return countsh_delay_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SysInfo::countsh_delay() const {
  // @@protoc_insertion_point(field_get:mam.SysInfo.countSH_delay)
  return _internal_countsh_delay();
}
inline void SysInfo::_internal_set_countsh_delay(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  countsh_delay_ = value;
}
inline void SysInfo::set_countsh_delay(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_countsh_delay(value);
  // @@protoc_insertion_point(field_set:mam.SysInfo.countSH_delay)
}

// int32 countPdt_pos = 11;
inline void SysInfo::clear_countpdt_pos() {
  countpdt_pos_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SysInfo::_internal_countpdt_pos() const {
  return countpdt_pos_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SysInfo::countpdt_pos() const {
  // @@protoc_insertion_point(field_get:mam.SysInfo.countPdt_pos)
  return _internal_countpdt_pos();
}
inline void SysInfo::_internal_set_countpdt_pos(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  countpdt_pos_ = value;
}
inline void SysInfo::set_countpdt_pos(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_countpdt_pos(value);
  // @@protoc_insertion_point(field_set:mam.SysInfo.countPdt_pos)
}

// int32 countPdt_neg = 12;
inline void SysInfo::clear_countpdt_neg() {
  countpdt_neg_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SysInfo::_internal_countpdt_neg() const {
  return countpdt_neg_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SysInfo::countpdt_neg() const {
  // @@protoc_insertion_point(field_get:mam.SysInfo.countPdt_neg)
  return _internal_countpdt_neg();
}
inline void SysInfo::_internal_set_countpdt_neg(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  countpdt_neg_ = value;
}
inline void SysInfo::set_countpdt_neg(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_countpdt_neg(value);
  // @@protoc_insertion_point(field_set:mam.SysInfo.countPdt_neg)
}

// int32 countPdt_invalid = 13;
inline void SysInfo::clear_countpdt_invalid() {
  countpdt_invalid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SysInfo::_internal_countpdt_invalid() const {
  return countpdt_invalid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SysInfo::countpdt_invalid() const {
  // @@protoc_insertion_point(field_get:mam.SysInfo.countPdt_invalid)
  return _internal_countpdt_invalid();
}
inline void SysInfo::_internal_set_countpdt_invalid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  countpdt_invalid_ = value;
}
inline void SysInfo::set_countpdt_invalid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_countpdt_invalid(value);
  // @@protoc_insertion_point(field_set:mam.SysInfo.countPdt_invalid)
}

// double consume_CalFeat = 14;
inline void SysInfo::clear_consume_calfeat() {
  consume_calfeat_ = 0;
}
inline double SysInfo::_internal_consume_calfeat() const {
  return consume_calfeat_;
}
inline double SysInfo::consume_calfeat() const {
  // @@protoc_insertion_point(field_get:mam.SysInfo.consume_CalFeat)
  return _internal_consume_calfeat();
}
inline void SysInfo::_internal_set_consume_calfeat(double value) {
  
  consume_calfeat_ = value;
}
inline void SysInfo::set_consume_calfeat(double value) {
  _internal_set_consume_calfeat(value);
  // @@protoc_insertion_point(field_set:mam.SysInfo.consume_CalFeat)
}

// double consume_CalPdt = 15;
inline void SysInfo::clear_consume_calpdt() {
  consume_calpdt_ = 0;
}
inline double SysInfo::_internal_consume_calpdt() const {
  return consume_calpdt_;
}
inline double SysInfo::consume_calpdt() const {
  // @@protoc_insertion_point(field_get:mam.SysInfo.consume_CalPdt)
  return _internal_consume_calpdt();
}
inline void SysInfo::_internal_set_consume_calpdt(double value) {
  
  consume_calpdt_ = value;
}
inline void SysInfo::set_consume_calpdt(double value) {
  _internal_set_consume_calpdt(value);
  // @@protoc_insertion_point(field_set:mam.SysInfo.consume_CalPdt)
}

// double maxConsume_CalFeat = 16;
inline void SysInfo::clear_maxconsume_calfeat() {
  maxconsume_calfeat_ = 0;
}
inline double SysInfo::_internal_maxconsume_calfeat() const {
  return maxconsume_calfeat_;
}
inline double SysInfo::maxconsume_calfeat() const {
  // @@protoc_insertion_point(field_get:mam.SysInfo.maxConsume_CalFeat)
  return _internal_maxconsume_calfeat();
}
inline void SysInfo::_internal_set_maxconsume_calfeat(double value) {
  
  maxconsume_calfeat_ = value;
}
inline void SysInfo::set_maxconsume_calfeat(double value) {
  _internal_set_maxconsume_calfeat(value);
  // @@protoc_insertion_point(field_set:mam.SysInfo.maxConsume_CalFeat)
}

// double maxConsume_CalPdt = 17;
inline void SysInfo::clear_maxconsume_calpdt() {
  maxconsume_calpdt_ = 0;
}
inline double SysInfo::_internal_maxconsume_calpdt() const {
  return maxconsume_calpdt_;
}
inline double SysInfo::maxconsume_calpdt() const {
  // @@protoc_insertion_point(field_get:mam.SysInfo.maxConsume_CalPdt)
  return _internal_maxconsume_calpdt();
}
inline void SysInfo::_internal_set_maxconsume_calpdt(double value) {
  
  maxconsume_calpdt_ = value;
}
inline void SysInfo::set_maxconsume_calpdt(double value) {
  _internal_set_maxconsume_calpdt(value);
  // @@protoc_insertion_point(field_set:mam.SysInfo.maxConsume_CalPdt)
}

// int32 count_CalFeat = 18;
inline void SysInfo::clear_count_calfeat() {
  count_calfeat_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SysInfo::_internal_count_calfeat() const {
  return count_calfeat_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SysInfo::count_calfeat() const {
  // @@protoc_insertion_point(field_get:mam.SysInfo.count_CalFeat)
  return _internal_count_calfeat();
}
inline void SysInfo::_internal_set_count_calfeat(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  count_calfeat_ = value;
}
inline void SysInfo::set_count_calfeat(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_count_calfeat(value);
  // @@protoc_insertion_point(field_set:mam.SysInfo.count_CalFeat)
}

// int32 count_CalPdt = 19;
inline void SysInfo::clear_count_calpdt() {
  count_calpdt_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SysInfo::_internal_count_calpdt() const {
  return count_calpdt_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SysInfo::count_calpdt() const {
  // @@protoc_insertion_point(field_get:mam.SysInfo.count_CalPdt)
  return _internal_count_calpdt();
}
inline void SysInfo::_internal_set_count_calpdt(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  count_calpdt_ = value;
}
inline void SysInfo::set_count_calpdt(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_count_calpdt(value);
  // @@protoc_insertion_point(field_set:mam.SysInfo.count_CalPdt)
}

// int32 ntime = 20;
inline void SysInfo::clear_ntime() {
  ntime_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SysInfo::_internal_ntime() const {
  return ntime_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SysInfo::ntime() const {
  // @@protoc_insertion_point(field_get:mam.SysInfo.ntime)
  return _internal_ntime();
}
inline void SysInfo::_internal_set_ntime(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  ntime_ = value;
}
inline void SysInfo::set_ntime(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ntime(value);
  // @@protoc_insertion_point(field_set:mam.SysInfo.ntime)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace mam

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_twelfth_2eproto
